# Generated by Django 5.0.7 on 2024-07-17 23:42

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('profile_photo', models.ImageField(default='default_profile.jpg', upload_to='profile_pics')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('bio', models.CharField(max_length=255)),
                ('followers', models.ManyToManyField(blank=True, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessUser',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('website', models.CharField(max_length=255)),
                ('target_audience', models.CharField(choices=[('art', 'Art and Photography'), ('automotive', 'Automotive'), ('beauty', 'Beauty and Makeup'), ('business', 'Business'), ('diversity', 'Diversity and Inclusion'), ('education', 'Education'), ('entertainment', 'Entertainment'), ('fashion', 'Fashion'), ('finance', 'Finance'), ('food', 'Food and Beverage'), ('gaming', 'Gaming'), ('health', 'Health and Wellness'), ('home', 'Home and Gardening'), ('outdoor', 'Outdoor and Nature'), ('parenting', 'Parenting and Family'), ('pets', 'Pets'), ('sports', 'Sports and Fitness'), ('technology', 'Technology'), ('travel', 'Travel'), ('videography', 'Videography')], max_length=255)),
                ('successfull_hirings', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='CreatorUser',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('date_of_birth', models.DateField()),
                ('area', models.CharField(choices=[('art', 'Art and Photography'), ('automotive', 'Automotive'), ('beauty', 'Beauty and Makeup'), ('business', 'Business'), ('diversity', 'Diversity and Inclusion'), ('education', 'Education'), ('entertainment', 'Entertainment'), ('fashion', 'Fashion'), ('finance', 'Finance'), ('food', 'Food and Beverage'), ('gaming', 'Gaming'), ('health', 'Health and Wellness'), ('home', 'Home and Gardening'), ('outdoor', 'Outdoor and Nature'), ('parenting', 'Parenting and Family'), ('pets', 'Pets'), ('sports', 'Sports and Fitness'), ('technology', 'Technology'), ('travel', 'Travel'), ('videography', 'Videography')], max_length=255)),
                ('successful_campaigns', models.IntegerField(default=0)),
            ],
        ),
    ]
